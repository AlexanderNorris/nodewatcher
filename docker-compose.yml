version: "3.8"
services:
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    volumes:
      - ./grafana:/etc/grafana/provisioning

  stats_db:
    image: mysql:8.0.33
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: stats
      MYSQL_USER: stats
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10

  redis:
    image: redis:alpine

  worker1:
    build: ./nodewatcher
    command: celery -A nodewatcher worker -l info -n worker1 -O fair --concurrency=50

  worker2:
    build: ./nodewatcher
    command: celery -A nodewatcher worker -l info -n worker2 -O fair --concurrency=50

  worker3:
    build: ./nodewatcher
    command: celery -A nodewatcher worker -l info -n worker3 -O fair --concurrency=50

  worker4:
    build: ./nodewatcher
    command: celery -A nodewatcher worker -l info -n worker4 -O fair --concurrency=50

  celery-beat:
    build: ./nodewatcher
    command: celery -A nodewatcher beat -l info

  flower:
    build: ./nodewatcher
    command: celery -A nodewatcher.app flower
    volumes:
      - ./nodewatcher:/data
    working_dir: /data
    ports:
      - 5555:5555
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
